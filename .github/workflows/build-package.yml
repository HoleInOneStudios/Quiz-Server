name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  NODE_VERSION: "16"
  DIST_DIR: dist
  RELEASE_DIR: release
  WIN_ARTIFACT: quiz-app-win.zip
  LINUX_ARTIFACT: quiz-app-linux.zip
  MACOS_ARTIFACT: quiz-app-macos.zip

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: |
          npm run build:scripts
          mkdir -p ${{ env.DIST_DIR }}/data
          cp src/data/data.xlsx ${{ env.DIST_DIR }}/data.xlsx
          cp -r src/img ${{ env.DIST_DIR }}/img
          cp .env ${{ env.DIST_DIR }}/.env
          sed -i 's/^NODE_ENV=0$/NODE_ENV=production/' ${{ env.DIST_DIR }}/.env
          sed -i 's/^FILE_PATH=.*$/FILE_PATH="data.xlsx"/' ${{ env.DIST_DIR }}/.env

      - name: Package artifacts
        run: |
          mkdir -p ${{ env.DIST_DIR }}/release
          zip -r ${{ env.DIST_DIR }}/release/${{ env.WIN_ARTIFACT }} ${{ env.DIST_DIR }}/*
          zip -r ${{ env.DIST_DIR }}/release/${{ env.LINUX_ARTIFACT }} ${{ env.DIST_DIR }}/*
          zip -r ${{ env.DIST_DIR }}/release/${{ env.MACOS_ARTIFACT }} ${{ env.DIST_DIR }}/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ${{ env.DIST_DIR }}/release

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: temp/${{ env.RELEASE_DIR }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: temp/${{ env.RELEASE_DIR }}/${{ env.WIN_ARTIFACT }}
          asset_name: ${{ env.WIN_ARTIFACT }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: temp/${{ env.RELEASE_DIR }}/${{ env.LINUX_ARTIFACT }}
          asset_name: ${{ env.LINUX_ARTIFACT }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: temp/${{ env.RELEASE_DIR }}/${{ env.MACOS_ARTIFACT }}
          asset_name: ${{ env.MACOS_ARTIFACT }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
