name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  NODE_VERSION: "16"
  DIST_DIR: dist
  RELEASE_DIR: release
  WIN_ARTIFACT: quiz-app-win.zip
  LINUX_ARTIFACT: quiz-app-linux.zip
  MACOS_ARTIFACT: quiz-app-macos.zip

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build-package

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            **/${{ env.DIST_DIR }}
          key: ${{ runner.os }}-build-${{ hashFiles('**/${{ env.DIST_DIR }}/**') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WIN_ARTIFACT }}
          path: ${{ env.DIST_DIR }}/${{ env.RELEASE_DIR }}/${{ env.WIN_ARTIFACT }}

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LINUX_ARTIFACT }}
          path: ${{ env.DIST_DIR }}/${{ env.RELEASE_DIR }}/${{ env.LINUX_ARTIFACT }}

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.MACOS_ARTIFACT }}
          path: ${{ env.DIST_DIR }}/${{ env.RELEASE_DIR }}/${{ env.MACOS_ARTIFACT }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.WIN_ARTIFACT }}
          path: temp/${{ env.RELEASE_DIR }}

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.LINUX_ARTIFACT }}
          path: temp/${{ env.RELEASE_DIR }}

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.MACOS_ARTIFACT }}
          path: temp/${{ env.RELEASE_DIR }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: temp/${{ env.RELEASE_DIR }}/${{ env.WIN_ARTIFACT }}
          asset_name: ${{ env.WIN_ARTIFACT }}
          asset_content_type: application/zip

      - name: Upload Linux asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: temp/${{ env.RELEASE_DIR }}/${{ env.LINUX_ARTIFACT }}
          asset_name: ${{ env.LINUX_ARTIFACT }}
          asset_content_type: application/zip

      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: temp/${{ env.RELEASE_DIR }}/${{ env.MACOS_ARTIFACT }}
          asset_name: ${{ env.MACOS_ARTIFACT }}
          asset_content_type: application/zip
